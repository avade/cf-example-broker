// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/avade/cf-example-broker/database"
)

type FakeCreator struct {
	CreateDbStub        func() (error, string)
	createDbMutex       sync.RWMutex
	createDbArgsForCall []struct{}
	createDbReturns struct {
		result1 error
		result2 string
	}
	CreateUserStub        func(string) (error, string, string)
	createUserMutex       sync.RWMutex
	createUserArgsForCall []struct {
		arg1 string
	}
	createUserReturns struct {
		result1 error
		result2 string
		result3 string
	}
}

func (fake *FakeCreator) CreateDb() (error, string) {
	fake.createDbMutex.Lock()
	fake.createDbArgsForCall = append(fake.createDbArgsForCall, struct{}{})
	fake.createDbMutex.Unlock()
	if fake.CreateDbStub != nil {
		return fake.CreateDbStub()
	} else {
		return fake.createDbReturns.result1, fake.createDbReturns.result2
	}
}

func (fake *FakeCreator) CreateDbCallCount() int {
	fake.createDbMutex.RLock()
	defer fake.createDbMutex.RUnlock()
	return len(fake.createDbArgsForCall)
}

func (fake *FakeCreator) CreateDbReturns(result1 error, result2 string) {
	fake.CreateDbStub = nil
	fake.createDbReturns = struct {
		result1 error
		result2 string
	}{result1, result2}
}

func (fake *FakeCreator) CreateUser(arg1 string) (error, string, string) {
	fake.createUserMutex.Lock()
	fake.createUserArgsForCall = append(fake.createUserArgsForCall, struct {
		arg1 string
	}{arg1})
	fake.createUserMutex.Unlock()
	if fake.CreateUserStub != nil {
		return fake.CreateUserStub(arg1)
	} else {
		return fake.createUserReturns.result1, fake.createUserReturns.result2, fake.createUserReturns.result3
	}
}

func (fake *FakeCreator) CreateUserCallCount() int {
	fake.createUserMutex.RLock()
	defer fake.createUserMutex.RUnlock()
	return len(fake.createUserArgsForCall)
}

func (fake *FakeCreator) CreateUserArgsForCall(i int) string {
	fake.createUserMutex.RLock()
	defer fake.createUserMutex.RUnlock()
	return fake.createUserArgsForCall[i].arg1
}

func (fake *FakeCreator) CreateUserReturns(result1 error, result2 string, result3 string) {
	fake.CreateUserStub = nil
	fake.createUserReturns = struct {
		result1 error
		result2 string
		result3 string
	}{result1, result2, result3}
}

var _ database.Creator = new(FakeCreator)
